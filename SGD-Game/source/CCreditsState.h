////////////////////////////////////////////////////////////////////////////
//	File Name	:	"CCreditsState.h"
//
//	Author		:	Matt DiMatteo (MD)
//
//	Purpose		:	The Credits state derived from the base state
//					to hold all data needed to display the credits.
////////////////////////////////////////////////////////////////////////////
#pragma once
#include "IGameState.h"
#include"CBitmapFont.h"

struct Cred
{
	float velY;

	float posX;
	float posY;

	char* name;
	char* title;
};

class CCreditsState : public IGameState
{
private:

	int music;
	Cred credit[6];

	CBitmapFont font;

	Cred c;

	///////////////////////////////////////////////////////////////////
	//	Function:	"CCreditsState(Constructor)"
	///////////////////////////////////////////////////////////////////
	CCreditsState(void) {}
	CCreditsState(const CCreditsState&);
	CCreditsState& operator=(const CCreditsState&);

	///////////////////////////////////////////////////////////////////
	//	Function:	"~CCreditsState(Destructor)"
	///////////////////////////////////////////////////////////////////
	~CCreditsState(void) {}
public:
	///////////////////////////////////////////////////////////////////
	// Function: "GetInstance"
	//
	//  Purpose: Gets instance to the only instance of the class.
	///////////////////////////////////////////////////////////////////
	static CCreditsState* GetInstance();

	///////////////////////////////////////////////////////////////////
	// Function: "Enter"
	//
	//  Purpose: Initializes variables and pointers upon entering the state.
	///////////////////////////////////////////////////////////////////
	void Enter();
		
	///////////////////////////////////////////////////////////////////
	// Function: "Input"
	//
	//  Purpose: Receives input from player.
	///////////////////////////////////////////////////////////////////
	bool Input();

	///////////////////////////////////////////////////////////////////
	// Function: "Update"
	//
	// Purpose: Updates game objects based on time.
	////////////////////////////////////////////////////////////////////
	void Update();

	////////////////////////////////////////////////////////////////////
	// Function: “Render”
	//
	// Purpose: Draws game objects to the screen.
	////////////////////////////////////////////////////////////////////
	void Render();

	////////////////////////////////////////////////////////////////////
	// Function: “Exit”
	//
	// Purpose: Unloads any assets aquired since entering. It does this 
	//			and then exits the state .
	////////////////////////////////////////////////////////////////////
	void Exit();

};