////////////////////////////////////////////////////////
//   File Name	:	"CBullet.h"
//
//   Author		:	Matthew Di Matteo (MD)
//
//   Purpose	:	To provide a game object used as a projectile
//					in the game
////////////////////////////////////////////////////////
#pragma once

#include "CBase.h"
#include"CBoss.h"

#include "IListener.h"
class CPlayer;
class CBullet : public CBase, public IListener
{
	float m_fRotation;
	CPlayer * m_pOwner;
public:
	///////////////////////////////////////////////////////////////////
	//	Function:	"CBullet(Constructor)"
	///////////////////////////////////////////////////////////////////
	CBullet();

	///////////////////////////////////////////////////////////////////
	//	Function:	"~CBullet(Destructor)"
	///////////////////////////////////////////////////////////////////
	~CBullet();

	////////////////////////////////////////////////////////////////////
	//  Function: Accessors
	//
	//  Purpose : Returns the specified type.
	////////////////////////////////////////////////////////////////////
	inline CPlayer* GetOwner() {return m_pOwner;}
	inline float GetRotation() {return m_fRotation;}

	//////////////////////////////////////
	//	Function:	Mutators
	//
	//	Purpose	:	To set the specified type
	///////////////////////////////////////
	inline void SetOwner(CPlayer* pOwner){m_pOwner = pOwner;}
	inline void SetRotation(float fRotation){m_fRotation = fRotation;}

	////////////////////////////////////////////////////////////////////
	// Function: “Update”
	//
	// Purpose: Updates game objects based on time
	////////////////////////////////////////////////////////////////////
	void Update(float fElapsedTime);

	////////////////////////////////////////////////////////////////////
	// Function: “Render”
	//
	// Purpose: Draws game objects to the screen
	////////////////////////////////////////////////////////////////////
	void Render();

	////////////////////////////////////////////////////////////////////
	// Function: “HandleEvent”
	//
	// Purpose: Handles all events associated with this object
	////////////////////////////////////////////////////////////////////
	void HandleEvent(CEvent* pEvent);
};

class WebBullet : public CBase, public IListener
{
private:
	CBoss* m_pBoss;

public:
	WebBullet();
	~WebBullet();
	////////////////////////////////////////////////////////////////////
	// Function: “Update”
	//
	// Purpose: Updates game objects based on time
	////////////////////////////////////////////////////////////////////
	void Update(float fElapsedTime);

	////////////////////////////////////////////////////////////////////
	// Function: “Render”
	//
	// Purpose: Draws game objects to the screen
	////////////////////////////////////////////////////////////////////
	void Render();

	////////////////////////////////////////////////////////////////////
	// Function: “HandleEvent”
	//
	// Purpose: Handles all events associated with this object
	////////////////////////////////////////////////////////////////////
	void HandleEvent(CEvent* pEvent);

	//////////////////////////////////////
	//	Function:	Accessors
	//
	//	Purpose	:	To get the specified type
	///////////////////////////////////////
	inline CBoss* GetBoss() {return m_pBoss;}

	//////////////////////////////////////
	//	Function:	Mutators
	//
	//	Purpose	:	To set the specified type
	///////////////////////////////////////
	inline void SetBoss(CBoss* pOwner){m_pBoss = pOwner;}
	

};